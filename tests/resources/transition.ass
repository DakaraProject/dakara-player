[Script Info]
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1920
PlayResY: 1080

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: title,Roboto Thin,70,&H00191919,&H00191919,&H00A01286,&H00000000,0,0,0,0,100,100,0,0,3,20,0,1,70,300,585,1
Style: detail,Roboto Light,50,&H00A01286,&H00191919,&H00333333,&H00000000,0,0,0,0,100,100,0,0,1,0,0,7,70,300,540,1
Style: duration,Roboto Thin,100,&H00A01286,&H00191919,&H00333333,&H00000000,0,0,0,0,100,100,0,0,1,0,0,3,1600,70,585,1
Style: instrumental,Roboto Light,65,&H00A01286,&H00191919,&H00333333,&H00000000,0,0,0,0,100,100,0,0,1,0,0,1,70,1780,585,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
; title
Dialogue: 0,0:00:00.00,0:00:05.00,title,,190,0,0,,{\fad(500, 0)}Song title
; duration
Dialogue: 0,0:00:00.10,0:00:05.00,duration,,0,0,0,,{\fad(500, 0)}4:23
; use instrumental icon

Dialogue: 0,0:00:00.10,0:00:05.00,instrumental,,0,0,0,,{\fad(500, 0)}{\fnla-solid-900}

; artists (on one line)

Dialogue: 1,0:00:00.10,0:00:05.00,detail,,190,0,0,,{\fad(500, 0)}{\fnla-solid-900\fs40}{\r} Artist name {\fnla-solid-900\fs40}{\r} Other artist 

; works (one line per work)

Dialogue: 1,0:00:00.10,0:00:05.00,detail,,190,0,0,,{\fad(500, 0)}{\fnla-solid-900\fs40}{\r} Work title {\alpha&H80&}Subtitle of the work{\r} OP1

; owner
Dialogue: 1,0:00:00.10,0:00:05.00,detail,,190,0,0,,{\fad(500, 0)}{\fnla-solid-900\fs40}{\r} User

; We have decided to use subtitle files for text display with media players
; because we can get a fancy output quite easily. Subtitles allow formatting and
; easy text positionning. We have used Advanced Subtitle Station Alpha format
; because it has some animation features and it is widely used for karaoke
; subbing. You should feel at home!

; You can use any kind of subtitle format for the idle template file, as long as
; the media player can display it. The template is handled within the program by
; the Jinja2 template engine. Information are added by the mean of placeholders
; in the template, which are associated to the following data:

; {
;     "playlist_entry": {
;         "song": {
;             "title": "song title",
;             "duration": "song duration in seconds",
;             "file_path": "path to the song file",
;             "artists": [
;                 {
;                     "id": "id of the artist",
;                     "name": "artist name"
;                 }
;             ],
;             "works": [
;                 {
;                     "id": "id of the work link",
;                     "link_type": "type of relation betwoon the song and the work",
;                     "link_type_number": "number of the relation",
;                     "episodes": "episodes where this song is used"
;                     "work": {
;                         "id": "id of the work",
;                         "title": "title of the work",
;                         "subtitle": "subtitle of the work",
;                         "work_type": {
;                             "name": "name of the type of work",
;                             "name_plural": "plural form of the name",
;                             "query_name": "query name form of the name",
;                             "icon_name": "Line Awesome name of the icon",
;                         }
;                     },
;                 }
;             ],
;         },
;         "owner": {
;             "id": "id of the user who asked this song",
;             "username": "name of the user"
;         },
;         "date_created": "date when the playlist entry was created",
;     },
;     "fade_in": "if true, use fade-in effects"
; }

; Icon name can be used with the filter `icon` to get an actual icon (you have to
; set the font as Line Awesome). Long name of the link type is obtained with the
; `link_type_name` filter. Duration formatting is done with the `duration`
; filter.

; You will notice the special character "​" (zero width space, U+200B, may
; not be displayed in all editors) at the end of some lines, after a font size
; change. It is used to keep a line at the desired line height without having to
; display a real character.

; For further information about the Jinja2 template engine and its abilities,
; please consult the documentation:
; http://jinja.pocoo.org/docs/latest/
